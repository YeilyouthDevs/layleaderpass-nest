/**
 * @packageDocumentation
 * @module api.functional.user.signup
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { CreateUserDTO } from "../../../structures/CreateUserDTO";

export * as schema from "./schema";

/**
 * @controller UserController.signup
 * @path POST /user/signup
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function signup(
  connection: IConnection,
  createUserDTO: signup.Input,
): Promise<signup.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...signup.METADATA,
      template: signup.METADATA.path,
      path: signup.path(),
    },
    createUserDTO,
  );
}
export namespace signup {
  export type Input = CreateUserDTO;
  export type Output = {
    message: string;
  };

  export const METADATA = {
    method: "POST",
    path: "/user/signup",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/user/signup";
}
