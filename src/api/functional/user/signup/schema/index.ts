/**
 * @packageDocumentation
 * @module api.functional.user.signup.schema
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { Recordstringany } from "../../../../structures/Recordstringany";

/**
 * @controller UserController.getSignupSchema
 * @path GET /user/signup/schema
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getSignupSchema(
  connection: IConnection,
): Promise<getSignupSchema.Output> {
  return PlainFetcher.fetch(connection, {
    ...getSignupSchema.METADATA,
    template: getSignupSchema.METADATA.path,
    path: getSignupSchema.path(),
  });
}
export namespace getSignupSchema {
  export type Output = Recordstringany;

  export const METADATA = {
    method: "GET",
    path: "/user/signup/schema",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/user/signup/schema";
}
